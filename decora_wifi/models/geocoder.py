# Leviton Cloud Services API model Geocoder.
# Auto-generated by api_scraper.py.
#
# Copyright 2017 Tim Lyakhovetskiy <tlyakhov@gmail.com>
#
# This code is released under the terms of the MIT license. See the LICENSE
# file for more details.
from decora_wifi.base_model import BaseModel


class Geocoder(BaseModel):
    def __init__(self, session, model_id=None):
        super(Geocoder, self).__init__(session, model_id)

    def geocode(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Geocoder/geocode".format(self._id)
        return self._session.call_api(api, attribs, 'get')

    def get(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Geocoder/{0}".format(self._id)
        data = self._session.call_api(api, attribs, 'get')

        self.set_model_data(data)
        return self

        return self._session.call_api(api, attribs, 'get')

    def normalize(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Geocoder/normalize".format(self._id)
        return self._session.call_api(api, attribs, 'get')

    def reverse(self, attribs=None):
        if attribs is None:
            attribs = {}
        api = "/Geocoder/reverse".format(self._id)
        return self._session.call_api(api, attribs, 'get')

